prototype(Jonnitto.Picture:Picture) < prototype(Neos.Fusion:Tag) {
    tagName = 'figure'
    attributes.class = Fusion:RawArray {
        nodeType = 'jonnitto-picture'
        container = ${Configuration.setting('Jonnitto.Picture.container')}
    }

    // The main image
    image = ${q(node).property('image')}
    singleImage = ${Configuration.setting('Jonnitto.Picture.singleImage')}
    srcset = ${Configuration.setting('Jonnitto.Picture.srcset')}
    // The responsive image variants
    images = Fusion:RawArray {
        md = ${q(node).property('laptop')}
        sm = ${q(node).property('tablet')}
        xs = ${q(node).property('mobile')}
    }

    presets = Fusion:RawArray {
        lg = null
        md = null
        sm = null
        xs = null
        fallback = null
    }

    hasImage = ${this.image || this.images.md || this.images.sm || this.images.xs ? true : false}

    title = ${q(node).property('title')}
    alternativeText = ${q(node).property('alternativeText')}
    caption = ${q(node).property('caption')}
    lightbox = ${q(node).property('lightbox')}
    link = ${q(node).property('link')}

    breakpoints = ${Configuration.setting('Jonnitto.Picture.breakpoints')}
    maximumWidths = ${Configuration.setting('Jonnitto.Picture.maximumWidths')}
    maximumHeights = ${Configuration.setting('Jonnitto.Picture.maximumHeights')}
    widths = ${Configuration.setting('Jonnitto.Picture.widths')}
    heights = ${Configuration.setting('Jonnitto.Picture.heights')}
    allowCropping = ${Configuration.setting('Jonnitto.Picture.allowCropping')}
    allowUpScaling = ${Configuration.setting('Jonnitto.Picture.allowUpScaling')}


    @context {
        hasImage = ${this.hasImage}
        image = ${this.image}
        lightboxAsset = ${this.lightboxAsset}
        images = ${this.images}
        singleImage = ${this.singleImage}
        srcset = ${this.srcset}

        title = ${this.title}
        alternativeText = ${this.alternativeText}
        caption = ${this.caption}

        breakpoints = ${this.breakpoints}
        maximumWidths = ${this.maximumWidths}
        maximumHeights = ${this.maximumHeights}
        widths = ${this.widths}
        heights = ${this.heights}
        allowCropping = ${this.allowCropping}
        allowUpScaling = ${this.allowUpScaling}
        presets = ${this.presets}
        lightbox = ${this.lightbox}
        link = ${this.link}
    }

    content = Jonnitto.Picture:PictureTag {
        singleImage = ${singleImage}
        image = ${image}
        images = Fusion:RawArray {
            lg = ${image}
            md = ${images.md}
            sm = ${images.sm}
            xs = ${images.xs}
        }
        title = ${title}
        alternativeText = ${alternativeText}
        caption = ${caption}

        breakpoints = ${breakpoints}
        maximumWidths = ${maximumWidths}
        maximumHeights = ${maximumHeights}
        widths = ${widths}
        heights = ${heights}
        allowCropping = ${allowCropping}
        allowUpScaling = ${allowUpScaling}
        presets = ${presets}

        @process.addNotification = Carbon.Notification:Backend {
            @if.hasNoImage = ${!hasImage}
            content = ${Translation.translate(singleImage ? 'chooseImage' : 'chooseImages' , null, [], 'NodeTypes/Picture', 'Jonnitto.Picture')}
        }
    }

    @if.hasImageOrBackend = ${node.context.inBackend || this.hasImage ? true : false}
    @process.contentElementWrapping {
        expression = ContentElementWrapping
        @position = 'end 999999999'
    }

    @exceptionHandler = 'Neos\\Neos\\Fusion\\ExceptionHandlers\\NodeWrappingHandler'
}
